from random import choice
from random import randint
from utils.rates_user import *
from keyboards.inline import *
from aiogram import types
from loader import dp, bot
from data.config import *
from aiogram.dispatcher import FSMContext
from keyboards.default import kb_play_list
from sql_func import *
from fuzzywuzzy import fuzz


@dp.message_handler(commands=["games"])
async def play(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    await message.answer(
        f"<b>[–ò–≥—Ä—ã]</b> {link_user(user_id)}, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–≥—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä –Ω–∏–∂–Ω–µ ‚¨á",
        reply_markup=kb_play_list)


@dp.message_handler(lambda message: any([fuzz.ratio(f"{message.text.lower()}", "–∏–≥—Ä—ã") >= 75, fuzz.ratio(f"{message.text.lower()}", "–∏–≥—Ä–∞") >= 75,
fuzz.ratio(f"{message.text.lower()}", "–∏–≥—Ä–∞") >= 75, fuzz.ratio(f"{message.text.lower()}", "–°–ø–∏—Å–æ–∫ –∏–≥—Ä") >= 75]))
async def play(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    await message.answer(
        f"<b>[–ò–≥—Ä—ã]</b> {link_user(user_id)}, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–≥—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä –Ω–∏–∂–Ω–µ ‚¨á",
        reply_markup=kb_play_list)

@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "—Ñ—É—Ç–±–æ–ª") >= 75)
async def football(message: types.Message):
    user_id = message.from_user.id
    add_game(id=user_id, game='football')
    await message.answer(f"<b>[–ò–≥—Ä—ã - –§—É—Ç–±–æ–ª ‚öΩ]</b> {link_user(user_id)}, –Ω–∞–ø–∏—à–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n"
    f"{choice(info)} –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 100$\n"
    f"{check_balance(user_id, True)}", reply_markup=rates_inl("‚öΩ", user_id, "–§—É—Ç"))


@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "–¥–∞—Ä—Ç—Å") >= 75)
async def football(message: types.Message):
    user_id = message.from_user.id
    add_game(id=user_id, game='darts')
    await message.answer(f"<b>[–ò–≥—Ä—ã - –î–∞—Ä—Ç—Å üéØ]</b> {link_user(user_id)}, –Ω–∞–ø–∏—à–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n"
    f"{choice(info)} –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 100$\n"
    f"{check_balance(user_id, True)}", reply_markup=rates_inl("üéØ", user_id, "–î–∞—Ä"))


@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "–∫–∞–∑–∏–Ω–æ") >= 75)
async def casino(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    add_game(id=user_id, game='casino')
    await message.answer(f"<b>[–ò–≥—Ä—ã - –ö–∞–∑–∏–Ω–æ üé∞]</b> {link_user(user_id)}, –Ω–∞–ø–∏—à–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏\n"
    f"{choice(info)} –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ - 100$\n"
    f"{check_balance(user_id, True)}", reply_markup=rates_inl("üé∞", user_id, "–ö–∞–∑"))


@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "—Å—Ç–∞–∫–∞–Ω—á–∏–∫") >= 70)
async def cup(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    add_game(user_id, "cup")
    await message.answer(f"<b>[–ò–≥—Ä—ã - –°—Ç–∞–∫–∞–Ω—á–∏–∫ ü•õ]</b> {link_user(user_id)}, –¥–ª—è –∏–≥—Ä—ã –≤ ¬´–°—Ç–∞–∫–∞–Ω—á–∏–∫¬ª –Ω–∞–ø–∏—à–∏—Ç–µ 1 10–∫(–°—Ç–∞–≤–∫–∞ 10–∫ –Ω–∞ 1 —Å—Ç–∞–∫–∞–Ω—á–∏–∫) –∏–ª–∏ 1 10000\n"
    f"{choice(info)} –¶–µ–ª—å –∏–≥—Ä—ã - —É–≥–∞–¥–∞—Ç—å —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É",
    reply_markup=ikb_—Åup)


@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "–∫—É–±–∏–∫") >= 75)
async def cube(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    await message.answer(
        f"<b>[–ò–≥—Ä—ã - –ö—É–±–∏–∫ üé≤]</b> {link_user(user_id)}, –¥–ª—è –∏–≥—Ä—ã –≤ ¬´–ö—É–±–∏–∫¬ª –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6\n"
        f"{choice(info)} –¶–µ–ª—å –∏–≥—Ä—ã: –£–≥–∞–¥–∞—Ç—å —Å—Ç–æ—Ä–Ω—É –∫—É–±–∏–∫–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É", reply_markup=ikb_cube)


@dp.message_handler(lambda message: fuzz.ratio(f"{message.text.lower()}", "–∞–∫—Ü–∏–∏") >= 75)
async def investments(message: types.Message):
    user_id = message.from_user.id
    user_url = message.from_user.url
    await message.answer(
        f"<b>[–ò–≥—Ä—ã - –ê–∫—Ü–∏–∏ üìà]</b> {link_user(user_id)}, –≤—ã–±–µ—Ä–∏ –≤ –∫–∞–∫—É—é –∞–∫—Ü–∏—é —Ç–µ–±–µ –≤–ª–æ–∂–∏—Ç—å—Å—è:\n\n"
        "1‚É£ –ö–æ–º–ø–∞–Ω–∏—è –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –∏–≥—Ä—É—à–µ–∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤\nüí∞ C—Ç–æ–∏–º–æ—Å—Ç—å - 10k$\n\n"
        "2‚É£ –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∫–æ—Å–º–æ—Å–∞\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å - 100k$\n\n"
        "3‚É£ –ö–æ–º–ø–∞–Ω–∏—è –ø–æ –¥–æ–±—ã—á–µ –≥–∞–∑–∞\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å - 1kk$\n\n"
        "4‚É£ –ù–µ—Ñ—Ç–µ–¥–æ–±—ã–≤–∞—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è\nüí∞ C—Ç–æ–∏–º–æ—Å—Ç—å - 5kk$\n\n"
        f"{check_balance(user_id, True)}\n"
        "‚¨á –í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∞–∫—Ü–∏–∏ –Ω–∏–∂–µ —á—Ç–æ –±—ã –∫—É–ø–∏—Ç—å –µ–µ üí∏",
        reply_markup=ikb_stock)
